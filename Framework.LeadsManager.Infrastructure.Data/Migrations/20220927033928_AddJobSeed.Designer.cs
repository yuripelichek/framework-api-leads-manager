// <auto-generated />
using System;
using Framework.LeadsManager.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Framework.LeadsManager.Infrastructure.Data.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220927033928_AddJobSeed")]
    partial class AddJobSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            City = "City01",
                            ClientId = -6,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8766),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8771),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -2,
                            City = "City01",
                            ClientId = -2,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8774),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8775),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -3,
                            City = "City01",
                            ClientId = -3,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8777),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8778),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -4,
                            City = "City01",
                            ClientId = -4,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8780),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8781),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -5,
                            City = "City01",
                            ClientId = -5,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8783),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(8785),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6864),
                            Description = "CategoriaDescription01",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6872),
                            Name = "Categoria01"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6876),
                            Description = "CategoriaDescription02",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6877),
                            Name = "Categoria02"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6878),
                            Description = "CategoriaDescription03",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6880),
                            Name = "Categoria03"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6882),
                            Description = "CategoriaDescription04",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 879, DateTimeKind.Local).AddTicks(6883),
                            Name = "Categoria04"
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = -6,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 877, DateTimeKind.Local).AddTicks(6355),
                            Email = "nome01@xyz.com",
                            LastName = "Sobrenome01",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(4589),
                            Name = "Nome01",
                            Phone = "111.000.000"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5316),
                            Email = "nome022@xyz.com",
                            LastName = "Sobrenome022",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5321),
                            Name = "Nome022",
                            Phone = "222222.000.000"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5323),
                            Email = "nome033@xyz.com",
                            LastName = "Sobrenome033",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5324),
                            Name = "Nome033",
                            Phone = "333333.000.000"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5326),
                            Email = "nome044@xyz.com",
                            LastName = "Sobrenome044",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5327),
                            Name = "Nome044",
                            Phone = "444444.000.000"
                        },
                        new
                        {
                            Id = -5,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5328),
                            Email = "nome044@xyz.com",
                            LastName = "Sobrenome044",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 878, DateTimeKind.Local).AddTicks(5330),
                            Name = "Nome055",
                            Phone = "444444.000.000"
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceWithDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Job");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CategoryId = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(570),
                            Description = "Job001",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(576),
                            Price = 100m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -2,
                            CategoryId = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(581),
                            Description = "Job002",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(582),
                            Price = 222m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -3,
                            CategoryId = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(584),
                            Description = "Job003",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(585),
                            Price = 300m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -4,
                            CategoryId = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(587),
                            Description = "Job004",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(588),
                            Price = 1000m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -5,
                            CategoryId = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(590),
                            Description = "Job005",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 39, 27, 880, DateTimeKind.Local).AddTicks(591),
                            Price = 2000m,
                            PriceWithDiscount = 0m
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Lead");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Address", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Client", "Client")
                        .WithOne("Addreess")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Address", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Category", "Category")
                        .WithOne("Job")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Job", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Lead", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Client", "Client")
                        .WithMany("Lead")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Framework.LeadsManager.Domain.Entities.Job", "Job")
                        .WithOne("Lead")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Lead", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Category", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Client", b =>
                {
                    b.Navigation("Addreess");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.Navigation("Lead");
                });
#pragma warning restore 612, 618
        }
    }
}
