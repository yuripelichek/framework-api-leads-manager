// <auto-generated />
using System;
using Framework.LeadsManager.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Framework.LeadsManager.Infrastructure.Data.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220927034928_AddLead")]
    partial class AddLead
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            City = "City01",
                            ClientId = -6,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7439),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7444),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -2,
                            City = "City01",
                            ClientId = -2,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7448),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7449),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -3,
                            City = "City01",
                            ClientId = -3,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7452),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7453),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -4,
                            City = "City01",
                            ClientId = -4,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7455),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7456),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        },
                        new
                        {
                            Id = -5,
                            City = "City01",
                            ClientId = -5,
                            Complement = "",
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7458),
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(7459),
                            Neighborhood = "Bairro01",
                            Number = "001",
                            State = "",
                            Street = "",
                            ZipCode = ""
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5304),
                            Description = "CategoriaDescription01",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5314),
                            Name = "Categoria01"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5317),
                            Description = "CategoriaDescription02",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5318),
                            Name = "Categoria02"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5319),
                            Description = "CategoriaDescription03",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5321),
                            Name = "Categoria03"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5322),
                            Description = "CategoriaDescription04",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(5323),
                            Name = "Categoria04"
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = -6,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 790, DateTimeKind.Local).AddTicks(4149),
                            Email = "nome01@xyz.com",
                            LastName = "Sobrenome01",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(2291),
                            Name = "Nome01",
                            Phone = "111.000.000"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3105),
                            Email = "nome022@xyz.com",
                            LastName = "Sobrenome022",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3110),
                            Name = "Nome022",
                            Phone = "222222.000.000"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3112),
                            Email = "nome033@xyz.com",
                            LastName = "Sobrenome033",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3113),
                            Name = "Nome033",
                            Phone = "333333.000.000"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3115),
                            Email = "nome044@xyz.com",
                            LastName = "Sobrenome044",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3116),
                            Name = "Nome044",
                            Phone = "444444.000.000"
                        },
                        new
                        {
                            Id = -5,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3118),
                            Email = "nome044@xyz.com",
                            LastName = "Sobrenome044",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 792, DateTimeKind.Local).AddTicks(3119),
                            Name = "Nome055",
                            Phone = "444444.000.000"
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceWithDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.ToTable("Job");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CategoryId = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9193),
                            Description = "Job001",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9198),
                            Price = 100m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -2,
                            CategoryId = -1,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9203),
                            Description = "Job002",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9204),
                            Price = 222m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -3,
                            CategoryId = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9206),
                            Description = "Job003",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9207),
                            Price = 300m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -4,
                            CategoryId = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9210),
                            Description = "Job004",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9211),
                            Price = 1000m,
                            PriceWithDiscount = 0m
                        },
                        new
                        {
                            Id = -5,
                            CategoryId = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9213),
                            Description = "Job005",
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 793, DateTimeKind.Local).AddTicks(9214),
                            Price = 2000m,
                            PriceWithDiscount = 0m
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.ToTable("Lead");

                    b.HasData(
                        new
                        {
                            Id = -2,
                            ClientId = -2,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(339),
                            JobId = -2,
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(343)
                        },
                        new
                        {
                            Id = -3,
                            ClientId = -3,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(346),
                            JobId = -3,
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(347)
                        },
                        new
                        {
                            Id = -4,
                            ClientId = -4,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(349),
                            JobId = -4,
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(350)
                        },
                        new
                        {
                            Id = -5,
                            ClientId = -5,
                            CreatedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(352),
                            JobId = -5,
                            ModifiedAt = new DateTime(2022, 9, 27, 0, 49, 27, 794, DateTimeKind.Local).AddTicks(353)
                        });
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Address", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Client", "Client")
                        .WithOne("Addreess")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Address", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Category", "Category")
                        .WithOne("Job")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Job", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Lead", b =>
                {
                    b.HasOne("Framework.LeadsManager.Domain.Entities.Client", "Client")
                        .WithMany("Lead")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Framework.LeadsManager.Domain.Entities.Job", "Job")
                        .WithOne("Lead")
                        .HasForeignKey("Framework.LeadsManager.Domain.Entities.Lead", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Category", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Client", b =>
                {
                    b.Navigation("Addreess");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Framework.LeadsManager.Domain.Entities.Job", b =>
                {
                    b.Navigation("Lead");
                });
#pragma warning restore 612, 618
        }
    }
}
